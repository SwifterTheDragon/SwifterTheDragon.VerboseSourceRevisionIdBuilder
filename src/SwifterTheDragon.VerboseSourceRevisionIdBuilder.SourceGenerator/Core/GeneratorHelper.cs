// Copyright SwifterTheDragon, and the SwifterTheDragon.VerboseSourceRevisionIdBuilder contributors, 2024-2025. All Rights Reserved.
// SPDX-License-Identifier: MIT

namespace SwifterTheDragon.VerboseSourceRevisionIdBuilder.SourceGenerator.Core
{
    /// <summary>
    /// Provides helper methods for source generation,
    /// such as making auto-generated code header comments.
    /// </summary>
    internal static class GeneratorHelper
    {
        #region Fields & Properties
        /// <summary>
        /// The name of this tool.
        /// </summary>
        internal static string ToolName
        {
            get
            {
                return typeof(GeneratorHelper).Assembly.GetName().Name;
            }
        }
        /// <summary>
        /// The version of this tool.
        /// </summary>
        internal static string ToolVersion
        {
            get
            {
                return typeof(GeneratorHelper).Assembly.GetName().Version.ToString(
                    fieldCount: 4);
            }
        }
        #endregion Fields & Properties
        #region Methods
        /// <summary>
        /// Makes a code header comment to label auto-generated code.
        /// </summary>
        /// <param name="sourceFileName">
        /// The name of the source file that generated the code.
        /// </param>
        /// <returns>
        /// A header comment for labelling auto-generated code as auto-generated
        /// when scanning the contents of a source code file.
        /// </returns>
        internal static string MakeAutoGeneratedCodeHeader(
            string sourceFileName = null)
        {
            // 80 characters per line is a common standard.
            string autoGeneratedCodeHeader = "//----------------------------"
                + "--------------------------------------------------\n"
                + "// <auto-generated>\n"
                + "//     This code was generated by \""
                + ToolName
                + "\"\n"
                + "//     Version: "
                + ToolVersion
                + '\n';
            if (!string.IsNullOrWhiteSpace(
                value: sourceFileName))
            {
                autoGeneratedCodeHeader += "//     from "
                    + sourceFileName
                    + '\n';
            }
            autoGeneratedCodeHeader += "//\n"
                + "//     Changes to this file may cause incorrect behaviour and will be lost if\n"
                + "//     the code is regenerated.\n"
                + "// </auto-generated>\n"
                + "//----------------------------"
                + "--------------------------------------------------\n";
            return autoGeneratedCodeHeader;
        }
        /// <summary>
        /// Makes a code footer comment to label auto-generated code.
        /// </summary>
        /// <param name="generatorClassName">
        /// The name of the class that generated the code.
        /// </param>
        /// <returns>
        /// A footer comment for labelling auto-generated
        /// code as auto-generated.
        /// </returns>
        internal static string MakeAutoGeneratedFooter(
            string generatorClassName)
        {
            return "// Generated by \""
                + ToolName
                + "\"'s \""
                + generatorClassName
                + "\" class.\n";
        }
        #endregion Methods
    }
}
