<?xml version="1.0" encoding="UTF-8" ?>
<Assembly name="SwifterTheDragon.VerboseSourceRevisionIdBuilder.SourceGenerator">
    <Description>
        <summary>
            Gives a more verbose source revision ID than what Source Link offers and exposes it via an incremental source generator so it can be used in AssemblyInformationalVersionAttributes without MSBuild, allowing use in Unity projects.
        </summary>
    </Description>
    <Namespace name="Core">
        <Description>
            <summary>
                Provides miscellaneous functionality.
            </summary>
        </Description>
        <Type name="AdditionalTextOptionParser">
            <Description>
                <summary>
                    Parses key-value pairs from AdditionalTexts.
                </summary>
            </Description>
            <Field name="s_defaultSeparators">
                <summary>
                    The default separators to split a collection of values with.
                </summary>
            </Field>
            <Method name="ParseOptions(Microsoft.CodeAnalysis.AdditionalText,System.Threading.CancellationToken)">
                <summary>
                    Parses case-insensitive keys, and case-sensitive values from <c><paramref name="additionalText" /></c>.
                </summary>
                <param name="additionalText">
                    The file to parse options from.
                </param>
                <param name="cancellationToken">
                    See <c><see cref="global::System.Threading.CancellationToken" /></c>.
                </param>
                <example>
                    <c>   Key1  =  = Value1 </c> would be parsed as "<c>key1</c>" being the key, with "<c>= Value1</c>" being the value.
                </example>
                <returns>
                    A collection of case-insensitive keys, and case-sensitive values parsed from <c><paramref name="additionalText" /></c>. Leading, and trailing white space is trimmed from both keys, and values, before parsing.
                </returns>
            </Method>
            <Method name="GetValue(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
                <summary>
                    Retrieves a <c><see cref="global::System.Collections.ObjectModel.ReadOnlyCollection{T}" /></c> of <c><see langword="string" /></c>s from <c><paramref name="options" /></c> at the key of <c><paramref name="key" /></c>.
                </summary>
                <param name="options">
                    The options to retrieve the value from.
                </param>
                <param name="key">
                    The key to retrieve the value with.
                </param>
                <param name="defaultValue">
                    The default value to use instead if <c><paramref name="key" /></c> does not exist in <c><paramref name="options" /></c>.
                </param>
                <returns>
                    The value stored at <c><paramref name="key" /></c> within <c><paramref name="options" /></c>. If no such value exists, <c><paramref name="defaultValue" /></c> is used instead.
                </returns>
            </Method>
            <Method name="GetValue(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
                <summary>
                    Retrieves a <c><see langword="string" /></c> from <c><paramref name="options" /></c> at the key of <c><paramref name="key" /></c>.
                </summary>
                <param name="options">
                    The options to retrieve the value from.
                </param>
                <param name="key">
                    The key to retrieve the value with.
                </param>
                <param name="defaultValue">
                    The default value to use instead if <c><paramref name="key" /></c> does not exist in <c><paramref name="options" /></c>.
                </param>
                <returns>
                    The value stored at <c><paramref name="key" /></c> within <c><paramref name="options" /></c>. If no such value exists, <c><paramref name="defaultValue" /></c> is used instead.
                </returns>
            </Method>
            <Method name="GetValue(System.Collections.Generic.Dictionary{System.String,System.String},System.String,int)">
                <summary>
                    Retrieves an <c><see langword="int" /></c> from <c><paramref name="options" /></c> at the key of <c><paramref name="key" /></c>.
                </summary>
                <param name="options">
                    The options to retrieve a value from.
                </param>
                <param name="key">
                    The key to retrieve the value with.
                </param>
                <param name="defaultValue">
                    The default value to use instead if <c><paramref name="key" /></c> does not exist in <c><paramref name="options" /></c>.
                </param>
                <returns>
                    The value stored at <c><paramref name="key" /></c> within <c><paramref name="options" /></c>. If no such value exists, <c><paramref name="defaultValue" /></c> is used instead.
                </returns>
            </Method>
            <Method name="GetValue``1(System.Collections.Generic.Dictionary{System.String,System.String},System.String,``0)">
                <summary>
                    Retrieves a <c><typeparamref name="TEnum" /></c> from <c><paramref name="options" /></c> at the key of <c><paramref name="key" /></c>.
                </summary>
                <typeparam name="TEnum">
                    The <c><see langword="enum" /></c> type to parse the value as.
                </typeparam>
                <param name="options">
                    The options to retrieve the value from.
                </param>
                <param name="key">
                    The key to retrieve the value with.
                </param>
                <param name="defaultValue">
                    The default value to use instead if <c><paramref name="key" /></c> does not exist in <c><paramref name="options" /></c>.
                </param>
                <returns>
                    The value stored at <c><paramref name="key" /></c> within <c><paramref name="options" /></c>. If no such value exists, <c><paramref name="defaultValue" /></c> is used instead.
                </returns>
            </Method>
            <Method name="TryParseLine(System.String,System.String@,System.String@)">
                <summary>
                    Try to parse <c><paramref name="parsedKey" /></c>, and <c><paramref name="parsedValue" /></c> from <c><paramref name="input" /></c>.
                </summary>
                <param name="input">
                    The line to parse a key and value from.
                </param>
                <param name="parsedKey">
                    The resulting key, if successful.
                </param>
                <param name="parsedValue">
                    The resulting value, if successful.
                </param>
                <returns>
                    <c><see langword="false" /></c> if <c><paramref name="input" /></c> is <c><see langword="null" /></c>, white space, begins with '<c>#</c>', begins with '<c>;</c>', lacks both a key, and a value, or if the key is white space. Otherwise <c><see langword="true" /></c>, <c><paramref name="parsedKey" /></c> is the case-insensitive key, and <c><paramref name="parsedValue" /></c> is the case-sensitive value.
                </returns>
            </Method>
        </Type>
        <Type name="CommandLineUtilities">
            <Description>
                <summary>
                    Provides command line utilities, such as executing a command.
                </summary>
            </Description>
            <Method name="ExecuteCommandLineCommand(System.String,System.String)">
                <summary>
                    Executes a command via <c>cmd.exe</c> in the desired directory.
                </summary>
                <param name="command">
                    The command to be passed to <c>cmd.exe</c>.
                </param>
                <param name="directory">
                    The directory to run the command on.
                </param>
                <returns>
                    The output of the command that was executed.
                </returns>
            </Method>
            <Method name="TryGetWorkingDirectory(System.String,System.String@)">
                <summary>
                    Try to get a working directory from a path.
                </summary>
                <param name="path">
                    The path to try to get the working directory from.
                </param>
                <param name="workingDirectory">
                    The resulting working directory, if successful.
                </param>
                <returns>
                    <c><see langword="false" /></c> if a valid working directory was not found. Otherwise <c><see langword="true" /></c>, and <c><paramref name="workingDirectory" /></c> is the working directory that was found.
                </returns>
            </Method>
        </Type>
        <Type name="ConfigurationDefaults">
            <Description>
                <summary>
                    The default values for configuration.
                </summary>
            </Description>
            <Property name="SemanticVersionMajorVersion">
                <summary>
                    Gets the default semantic version major version configuration value.
                </summary>
                <value>
                    The default semantic version major version configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionMinorVersion">
                <summary>
                    Gets the default semantic version minor version configuration value.
                </summary>
                <value>
                    The default semantic version minor version configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionPatchVersion">
                <summary>
                    Gets the default semantic version patch version configuration value.
                </summary>
                <value>
                    The default semantic version patch version configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionPrefix">
                <summary>
                    Gets the default semantic version prefix configuration value.
                </summary>
                <value>
                    The default semantic version prefix configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionSuffix">
                <summary>
                    Gets the default semantic version suffix configuration value.
                </summary>
                <value>
                    The default semantic version suffix configuration value.
                </value>
            </Property>
            <Property name="GeneratedFileName">
                <summary>
                    Gets the default generated file name configuration value.
                </summary>
                <value>
                    The default generated file name configuration value.
                </value>
            </Property>
            <Property name="GeneratedNamespace">
                <summary>
                    Gets the default generated namespace configuration value.
                </summary>
                <value>
                    The default generated namespace configuration value.
                </value>
            </Property>
            <Property name="GeneratedTypeName">
                <summary>
                    Gets the default generated type name configuration value.
                </summary>
                <value>
                    The default generated type name configuration value.
                </value>
            </Property>
            <Property name="GeneratedFieldName">
                <summary>
                    Gets the default generated field name configuration value.
                </summary>
                <value>
                    The default generated field name configuration value.
                </value>
            </Property>
            <Property name="DirtyMark">
                <summary>
                    Gets the default dirty mark configuration value, for labelling a working tree with local modification.
                </summary>
                <value>
                    The default dirty mark configuration value, for labelling a working tree with local modification.
                </value>
            </Property>
            <Property name="BrokenMark">
                <summary>
                    Gets the default broken mark configuration value, for labelling a corrupt repository.
                </summary>
                <value>
                    The default broken mark configuration value, for labelling a corrupt repository.
                </value>
            </Property>
            <Property name="DetachedHeadLabel">
                <summary>
                    Gets the default detached <c>HEAD</c> label configuration value, for anonymous branches.
                </summary>
                <value>
                    The default detached <c>HEAD</c> label configuration value, for anonymous branches.
                </value>
            </Property>
            <Property name="InvalidHeadLabel">
                <summary>
                    Gets the default invalid <c>HEAD</c> label configuration value, for unborn branches.
                </summary>
                <value>
                    The default invalid <c>HEAD</c> label configuration value, for unborn branches.
                </value>
            </Property>
            <Property name="DefaultGitBranchName">
                <summary>
                    Gets the default Git branch name configuration value.
                </summary>
                <value>
                    The default Git branch name configuration value.
                </value>
            </Property>
            <Property name="RepositoryRootDirectoryRelativeToConfigurationFilePath">
                <summary>
                    Gets the default configuration value for the repository root directory relative to configuration file path.
                </summary>
                <value>
                    The default configuration value for the repository root directory relative to configuration file path.
                </value>
            </Property>
            <Property name="GitReferenceType">
                <summary>
                    Gets the default configuration value for the Git reference type to be described.
                </summary>
                <value>
                    The default configuration value for the Git reference type to be described.
                </value>
            </Property>
            <Property name="CandidateAmount">
                <summary>
                    Gets the default configuration value for the amount of most recent tags to describe <c>HEAD</c> with.
                </summary>
                <value>
                    The default configuration value for the amount of most recent tags to describe <c>HEAD</c> with.
                </value>
            </Property>
            <Property name="AbbrevLength">
                <summary>
                    Gets the default configuration value for the amount of hexadecimal digits to describe the abbreviated object name with.
                </summary>
                <value>
                    The default configuration value for the amount of hexadecimal digits to describe the abbreviated object name with.
                </value>
            </Property>
            <Property name="ParentCommitType">
                <summary>
                    Gets the default configuration value for following merge commit parent commits.
                </summary>
                <value>
                    The default configuration value for following merge commit parent commits.
                </value>
            </Property>
            <Property name="GitTagState">
                <summary>
                    Gets the default configuration value for if tags containing <c>HEAD</c> should be used, instead of tags predating <c>HEAD</c>.
                </summary>
                <value>
                    The default configuration value for if tags containing <c>HEAD</c> should be used, instead of tags predating <c>HEAD</c>.
                </value>
            </Property>
            <Property name="MatchPatterns">
                <summary>
                    Gets the default configuration value for match patterns to filter references with.
                </summary>
                <value>
                    The default configuration value for match patterns to filter references with.
                </value>
            </Property>
            <Property name="ExcludePatterns">
                <summary>
                    Gets the default configuration value for exclude patterns to filter references with.
                </summary>
                <value>
                    The default configuration value for exclude patterns to filter references with.
                </value>
            </Property>
        </Type>
        <Type name="ConfigurationKeys">
            <Description>
                <summary>
                    The keys to configuration values.
                </summary>
            </Description>
            <Property name="SemanticVersionMajorVersionLabel">
                <summary>
                    Gets the key to the semantic version major version label configuration value.
                </summary>
                <value>
                    The key to the semantic version major version label configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionMinorVersionLabel">
                <summary>
                    Gets the key to the semantic version minor version label configuration value.
                </summary>
                <value>
                    The key to the semantic version minor version label configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionPatchVersionLabel">
                <summary>
                    Gets the key to the semantic version patch version label configuration value.
                </summary>
                <value>
                    The key to the semantic version patch version label configuration value.
                </value>
            </Property>
            <Property name="GeneratedFileName">
                <summary>
                    Gets the key to the generated file name configuration value.
                </summary>
                <value>
                    The key to the generated file name configuration value.
                </value>
            </Property>
            <Property name="GeneratedNamespace">
                <summary>
                    Gets he key to the generated namespace configuration value.
                </summary>
                <value>
                    The key to the generated namespace configuration value.
                </value>
            </Property>
            <Property name="GeneratedTypeName">
                <summary>
                    Gets the key to the generated type name configuration value.
                </summary>
                <value>
                    The key to the generated type name configuration value.
                </value>
            </Property>
            <Property name="GeneratedFieldName">
                <summary>
                    Gets the key to the generated field name configuration value.
                </summary>
                <value>
                    The key to the generated field name configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionPrefix">
                <summary>
                    Gets the key to the semantic version prefix configuration value.
                </summary>
                <value>
                    The key to the semantic version prefix configuration value.
                </value>
            </Property>
            <Property name="SemanticVersionSuffix">
                <summary>
                    Gets the key to the semantic version suffix configuration value.
                </summary>
                <value>
                    The key to the semantic version suffix configuration value.
                </value>
            </Property>
            <Property name="DirtyMark">
                <summary>
                    Gets the key to the dirty mark configuration value, for labelling a working tree with local modification.
                </summary>
                <value>
                    The key to the dirty mark configuration value, for labelling a working tree with local modification.
                </value>
            </Property>
            <Property name="BrokenMark">
                <summary>
                    Gets the key to the broken mark configuration value, for labelling a corrupt repository.
                </summary>
                <value>
                    The key to the broken mark configuration value, for labelling a corrupt repository.
                </value>
            </Property>
            <Property name="DetachedHeadLabel">
                <summary>
                    Gets the key to the detached <c>HEAD</c> label configuration value, for anonymous branches.
                </summary>
                <value>
                    The key to the detached <c>HEAD</c> label configuration value, for anonymous branches.
                </value>
            </Property>
            <Property name="InvalidHeadLabel">
                <summary>
                    Gets the key to the invalid <c>HEAD</c> label configuration value, for unborn branches.
                </summary>
                <value>
                    The key to the invalid <c>HEAD</c> label configuration value, for unborn branches.
                </value>
            </Property>
            <Property name="DefaultGitBranchName">
                <summary>
                    Gets the key to the default Git branch name configuration value.
                </summary>
                <value>
                    The key to the default Git branch name configuration value.
                </value>
            </Property>
            <Property name="RepositoryRootDirectoryRelativeToConfigurationFilePath">
                <summary>
                    Gets the key to the repository root directory relative to configuration file path configuration value.
                </summary>
                <value>
                    The key to the repository root directory relative to configuration file path configuration value.
                </value>
            </Property>
            <Property name="GitReferenceType">
                <summary>
                    Gets the key to the Git reference type configuration value.
                </summary>
                <value>
                    The key to the Git reference type configuration value.
                </value>
            </Property>
            <Property name="CandidateAmount">
                <summary>
                    Gets the key to the candidate (most recent tag) amount configuration value.s
                </summary>
                <value>
                    The key to the candidate (most recent tag) amount configuration value.
                </value>
            </Property>
            <Property name="AbbrevLength">
                <summary>
                    Gets the key to the abbreviation length (the amount of hexadecimal digits to describe an abbreviated object name with) configuration value.
                </summary>
                <value>
                    The key to the abbreviation length (the amount of hexadecimal digits to describe an abbreviated object name with) configuration value.
                </value>
            </Property>
            <Property name="ParentCommitType">
                <summary>
                    Gets the key to the parent commit type configuration value.
                </summary>
                <value>
                    The key to the parent commit type configuration value.
                </value>
            </Property>
            <Property name="GitTagState">
                <summary>
                    Gets the key to the Git tag state configuration value.
                </summary>
                <value>
                    The key to the Git tag state configuration value.
                </value>
            </Property>
            <Property name="MatchPatterns">
                <summary>
                    Gets the key to the match patterns configuration value.
                </summary>
                <value>
                    The key to the match patterns configuration value.
                </value>
            </Property>
            <Property name="ExcludePatterns">
                <summary>
                    Gets the key to the exclude patterns configuration value.
                </summary>
                <value>
                    The key to the exclude patterns configuration value.
                </value>
            </Property>
        </Type>
        <Type name="GeneratorHelper">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
        <Type name="GitHelper">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
        <Type name="GitReferenceType">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
        <Type name="GitTagState">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
        <Type name="ParentCommitType">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
        <Type name="VerboseGitDescribeConfiguration">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
        <Type name="VerboseSourceRevisionIdGenerator">
            <Description>
                <summary>
                </summary>
            </Description>
        </Type>
    </Namespace>
</Assembly>
